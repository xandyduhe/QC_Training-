#~/NVME/scARC_Duan_018/Duan_project_025_RNA/Analysis_part2_GRCh38/20221122_PCA_for_025_RNAseq_celllines.R
# init ####
library(Seurat)
library(Signac)
library(edgeR)

library(sva)
library(FactoMineR)
library(factoextra)

library(corrplot)
library(ggplot2)
library(RColorBrewer)
library(ggrepel)
library(reshape2)
library(stringr)
library(patchwork)

setwd('~/Data/Alexi_Duhe/test1')
load("~/Data/Alexi_Duhe/test1/integrated_labeled.RData")


#load("~/NVME/scARC_Duan_018/R_scARC_Duan_018/codes/EnsDb_UCSC_hg38_annotation.RData")


cell.line.ids <- sort(unique(integrated.labeled$cell.line.ident))

integrated.labeled <- subset(integrated.labeled, cell.type != "unidentified" & cell.type != 'immature')
cell.type.ids <- as.vector(unique(integrated.labeled$cell.type))
cell.type.ids
times <- unique(integrated.labeled$time.ident)
times
batch <- c()


# create list of size lines(20) X cell.type.ids(3) =  60 where all values = NA, to store
rownames <- rep_len(NA, (length(cell.line.ids) * length(cell.type.ids)))
# k is the "row number" incremented by cell.type.ids = 3
k = 1
# loop through lines(20)
for (i in 1:length(cell.line.ids)) {
  print(paste0('line = ', cell.line.ids[i])
        )
  #create obj with ONLY current cell line @ cell.line.ids[i]
  ith.cell.line.obj <- subset(obj, cell.line.ident == cell.line.ids[i])

  for (l in 1:length(cell.type.ids)){

    # add the l-th cell type to the list of 60
    rownames[k] <- paste(cell.line.ids[i], cell.type.ids, sep = '_')
    print(paste("Rownames of k = ", rownames[k]))

    # create obj with ONLY current cell type @ cell.type.ids[l] .
    lth.cell.type.obj <- subset(ith.cell.line.obj, cell.type == cell.type.ids[l])

    # add 1 to k to move to next row in rownames
    if (i == 1 & l == 1) {
      cmp.mat <- edgeR::cpm(rowSums(lth.cell.type.obj@assays$SCT@counts),
                            normalized.lib.sizes = T, log = F)
      cpm.mat <- cpm.mat[, 1]
    } else {
      to.bind <- edgeR::cmp(rowSums(lth.cell.type.obj@assays$SCT@counts),
                            normalized.lib.sizes = T, log = F)
      to.bind <- to.bind[, 1]
      cpm.mat <- rbind(cpm.mat, to.bind)
    }
    k = k + 1
  }
  }

# auxiliary functions ####
makeCpmMatCelltypes_RNA <- function(obj, cell.line.ids, cell.type.ids) {
  # create list of size lines(20) X cell.type.ids(3) =  60 where all values = NA, to store
  rownames <- rep_len(NA, (length(cell.line.ids) * length(cell.type.ids)))
  # k is the "row number" incremented by cell.type.ids = 3
  k = 1
  # loop through lines(20)
  for (i in 1:length(cell.line.ids)) {
    print(paste0('line = ', cell.line.ids[i])
    )
    #create obj with ONLY current cell line @ cell.line.ids[i]
    ith.cell.line.obj <- subset(obj, cell.line.ident == cell.line.ids[i])

    for (l in 1:length(cell.type.ids)){

      # add the l-th cell type to the list of 60
      rownames[k] <- paste(cell.line.ids[i], cell.type.ids, sep = '_')
      print(paste("Rownames of k = ", rownames[k]))

      # create obj with ONLY current cell type @ cell.type.ids[l] .
      lth.cell.type.obj <- subset(ith.cell.line.obj, cell.type == cell.type.ids[l])

      # add 1 to k to move to next row in rownames
      if (i == 1 & l == 1) {
        cmp.mat <- edgeR::cpm(rowSums(lth.cell.type.obj@assays$SCT@counts),
                              normalized.lib.sizes = T, log = F)
        cpm.mat <- cpm.mat[, 1]
      } else {
        to.bind <- edgeR::cmp(rowSums(lth.cell.type.obj@assays$SCT@counts),
                              normalized.lib.sizes = T, log = F)
        to.bind <- to.bind[, 1]
        cpm.mat <- rbind(cpm.mat, to.bind)
      }
      k = k + 1

    }
  }
  rownames(cpm_mat) <- rownames
  return(cpm_mat)
}


for (l in lines) {
  print(l)
  batch <- c(batch,
             unique(str_split(integrated.labeled$orig.ident[integrated.labeled$cell.line.ident == l],
                              pattern = "-", n = 2, simplify = T)[1]))
}
batch <- as.factor(batch)
batch_more <- rep(batch, each = 3)

# RNA - 1. look at how cell types cluster ####
for (i in times) {
  subtime18 <- subset(integrated.labeled, time.ident == i)
  cpm_mat <- makeCpmMatCelltypes_RNA(subtime18, lines, types)
  pca_res <- PCA(cpm_mat, scale.unit = TRUE, ncp = 5, graph = F)

  p <- fviz_pca_ind(pca_res,
                    repel = F,
                    habillage = batch_more,
                    palette = brewer.pal(name = "Paired", n = 10),
                    show.legend = F,
                    invisible = "quali", font.x = 10) +
    theme_light() +
    ggtitle(paste0("Cell lines x cell type PCA colored by cocultured batch \n raw data - ",
                   i))
  print(p)

  com_mat <- ComBat(
    dat = t(cpm_mat),
    batch = batch_more
  )
  pca_res <- PCA(t(com_mat), scale.unit = TRUE, ncp = 5, graph = TRUE)

  p <- fviz_pca_ind(pca_res,
                    repel = F,
                    habillage = batch_more,
                    palette = brewer.pal(name = "Paired", n = 10),
                    show.legend = F,
                    invisible = "quali", font.x = 10) +
    theme_light() +
    ggtitle(paste0("Cell lines x cell type PCA colored by cocultured batch \n combat-corrected data - ",
                   i))
  print(p)

}
